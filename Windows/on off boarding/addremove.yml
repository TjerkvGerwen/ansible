---
- name: invoke SQL powershell
  hosts: all
  connection: winrm
  tasks:
    - name: Create user
      win_shell: |
        $data = Invoke-Sqlcmd -Query "SELECT * FROM [Challenge].[dbo].[user2] WHERE Creation = 1" -ServerInstance "srv-winess19"        
        foreach($employee in $data)
        {
        Write-output "Deze statemennt was TRUE en ik ga nu " + $employee.username  + " aanmaken"  
        function Get-RandomCharacters($length, $characters) 
        {
        $random = 1..$length | ForEach-Object { Get-Random -Maximum $characters.length }
        $private:ofs=""
        return [String]$characters[$random]
        }
        function Scramble-String([string]$inputString)
        {     
        $characterArray = $inputString.ToCharArray()   
        $scrambledStringArray = $characterArray | Get-Random -Count $characterArray.Length     
        $outputString = -join $scrambledStringArray
        return $outputString 
        }
 
        $password = Get-RandomCharacters -length 5 -characters 'abcdefghiklmnoprstuvwxyz'
        $password += Get-RandomCharacters -length 1 -characters 'ABCDEFGHKLMNOPRSTUVWXYZ'
        $password += Get-RandomCharacters -length 1 -characters '1234567890'
        $password += Get-RandomCharacters -length 1 -characters '!'
 
        Write-Host $password

        $password = Scramble-String $password
 
        Write-Host $password

        $SecurePassword = $password | ConvertTo-SecureString -AsPlainText -Force

        New-ADUser -Name $employee.username -GivenName $employee.firstname -Surname $employee.lastname -SamAccountName $employee.username -Path "CN=Users,DC=peeps,DC=piepers" -Company $employee.company -City $employee.city -AccountPassword $SecurePassword -Enabled $True
        Invoke-Sqlcmd -Query "UPDATE Challenge.dbo.user2 SET creation = 0 WHERE ID = $($employee.ID) " -ServerInstance "srv-winess19"  -OutputSqlErrors $True
        Invoke-Sqlcmd -Query "INSERT INTO Challenge.dbo.passwords (ID,Username,Password) VALUES ($($employee.ID), '$($employee.username)', '$($password)');" -ServerInstance "srv-winess19"  -OutputSqlErrors $True
        }
    - name: Disable Users 
      win_shell: |
        $data = Invoke-Sqlcmd -Query "SELECT * FROM [Challenge].[dbo].[user2] WHERE State = 0" -ServerInstance "srv-winess19"        
        foreach($employee in $data)
        {
        Write-output "Deze statemennt was False en ik ga nu " + $employee.username  + " opblazen"
        Disable-ADAccount -Identity $employee.username  
        }
    - name: Delete Disabled users
      win_shell: |
        $users = Get-ADUser -Filter * | where {($_.enabled -eq $false)}
        Write-Output "We are deleting $users now after 90 days"
        Write-Output "pIEP POOP BAB IK BEN ROBOT" 